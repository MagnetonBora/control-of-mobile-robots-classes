
Hello, my name is Magnus Egerstedt and I'm
a professor at The Georgia Institute of
Technology and I will be teaching this
Coursera course Control of Mobile Robots
and this course is really going to be
structured around controls on one side
which is this rather general framework for
making dynamical systems do awesome
things, and robotics on the other which is
a particular type of system that we're
going to be focusing on. And the first
module of the course is really going to be
on an introduction to controls. Basically
we're going to talk about some of the key
concepts That we're going to need in order
to effectively control mobile robots. But,
what I would like to do first is talk a
little bit about who I am in terms of my
research interest and see how this maps
onto what is actually happening in the
course. So, I'm a professor in Electrical
and Computer Engineering, and my, my
research is really focusing on two rather
distinct thrusts. One is an intellectual
hammer, which is control theories, so this
is a general framework for making
dynamical systems do awesome things.
And then, I have this intellectual hammer
that I hit on the head of a, an
application nail, if you will. And the
application nail is robotics. So I spent
most of my practical time on making robots
do interesting things. And, that's lucky
for you because the topic of this course
is exactly this marriage of control theory
of and robotics.
And my research is really focusing on
three different type of robotic problems.
The one I'm very interested is swarm
robotics and the question there is how do
you make large collections of mobile
robots do useful and interesting things,
with limited information. And we're going
to see how to design swarm algorithms for
mobile robots in this, this class. another
area that I'm interested in is behavior
based control. And the idea is, since most
robotic tasks are rather complex, there is
no single controller that can solve the
problem, and instead you have to break the
controller structure do wn into multiple
controllers. So for instance, if you have
a robot that's suppose to go to a goal,
you have one controller that takes you
towards the goal, but then on modeled
obstacles thrown up in the path or in the
way so then you have to switch to another
behavior that ensures that you don't slam
into obstacles. And this idea of designing
multiple controllers and switching between
them becomes even more important when you
have complicated dynamical systems like
humanoid robots and snake robots or things
that are highly articulated instead of
just robots on the ground. the last area
that I am really interested in is field
robotics which really deals with how do
you take these general computation
algorithms that you develop in the lab and
put them on robots out in the field that
have to survive robustly in real
conditions and this picture here I like
very much because three of the robots we
are going to deal with in this in this
course are actually present. So, here is a
little round robot. This is a caperim
mobile robot, that's a differential drive
robot on the ground. We're going to
control these quite a lot. Up here in the
air, is a quadroter, and these robots have
to be controled In a different way, but
we're going to learn how to this as well,
and right here is a littel bipedal walking
humanoid robot and all of these robots
will show up physically in the class
throughout the, the various modules and
lectures. So here is actually an example
of what I do and the reason why I'm
showing this video is, because a lot of
the things we're going to learn in the
class are present here. So you have in
this case 15 mobile robots on the ground
and they have to together solve some kind
of coordinated control problem. In this
what case they have to do is, they have to
spell GRITS because I am the director of
the GRITS lab which stands for Georgia
Robotics and Intelligence Systems Lab. And
as you can see down on the left, there is
a link to a lot of our videos that you can
find on YouTube. But talking a bout the
robots here, what they need to do is they
need to use the information that's
available to them and come up with control
strategies based on that. And in this case
they had to figure out where they should
go in these particular formations. How
they should go there. they also need to
deal with the fact that robot models The
dynamics of these little guys,
surprisingly complicated and you should
not slam into each other, you should also
be able to survive disturbances. So Ted
here who's a former masters student in the
lab is actually messing with the system
and the controllers have to be able to
overcome these, these disturbances and
actually be robust to what is going on.
So, having said that what we are going to
do in the course is develop control
theory, which is this general mathematical
framework for making systems do useful
things. And then we're going to take
robotics as the main application domain,
and we're going to couple robot models and
robot problems too, but we develop on the
control theory side. And that's going to
result in a number of different mobility
controllers. and we're also going to
discuss a plethora of different
application domains found in robotics
where our controllers are useful. I do
want to point out, which is almost as
useful, what's not in the course. this
course is not a course on AI, in the sense
that the robots aren't going to reason at
high level about where they should be
going. Instead, someone has told the robot
where it should be going, and it's our job
to make it go there. It's also not going
to be a course on perception, in the sense
that we're going to assume that the
measurements we get are already reasonably
good and they tell us roughly what it is
that we are interested in and need to
know. we're also not dealing very much
with the actual design of robots, so a
clever mechanical engineer has already
built it for us and it's our job to make
this design do what it is that we want it
to do. So robotics typically People talk
about the sense plan act paradigm where
sensing is the perception side, the
planning is the AI side and the acting is
the control side. And this course falls
squarely into the act domain. And I want
to end with showing a rather, I think, I'm
using video, this is a course that I
taught on campus at Georgia Tech where
part of the course was to design
controllers, very rudimentary controllers
for making these robots go to goals
without actually running into obstacles.
And we had students actually compete not
at the AI level or the perception level
but purely on the controls level to
achieve certain tasks. So here you see for
instance one robot that's a little too
aggressive. It's also oscillating, so
there's something not perfect with this
control design. It's also a little slow.
the robot over on the left is more, it
oscillates less, but it's a little bit
slower. Here we have another example of
two other teams that are now competing
against each other and you will see that
one robot is again a little
overaggressive, the one on the right. And,
in fact it's going to be so aggressive
that it loses track of what it is that it
is doing. So, this will be an example of
a, maybe not so successful control design.
We will do this in this course. Now I
realize that I can't shape one of these
robots to every one of you, so instead we
are going to do this in the studio and
we're going to together develop the
control algorithms that results in, this
would be the final race in this class. and
take a look at team purple. This
controller is awesome. It's very
deliberate. It oscillates very little.
There is very little overshoot. It's
moving fast. And what's going on there is
just a small And slightly more informed
control design. So team purple won in this
case. And with that I would like to
conclude this first introductory lecture
to the course.
